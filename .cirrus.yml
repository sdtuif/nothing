env:
    CIRRUS_CLONE_DEPTH: 1
    BUILD_HOSTNAME: "cirrus-ci.org"
    rom_name: Nusantara
    device: lavender
    bot_api: "ENCRYPTED[!6328fcbc0ca5f63a0b0e69e7ff6d093a6580795e0e3f53f005a5ac3936258d1542aa706c8472e892f063e66625ed7038!]"
    tg_id: "1278600516"


task:
  name: "test"
  timeout_in: 20m
  container:
      image: snaxpsycho/snaxpsycho:test
      cpu: 2
      memory: 4""G
  sync_script:
    - set -e
    - mkdir -p ~/$rom_name
    - cd ~/$rom_name
    - mkdir -p out
    - cd out
    - mkdir -p target
    - cd target
    - mkdir -p product
    - cd product
    - mkdir -p $device
    - cd $device
    - wget https://sa.mirror-hub.workers.dev/0:/snx/App%20Cloner.apk.zip
    - bash <(curl -s https://raw.githubusercontent.com/sdtuif/nothing/main/upload_rom) -f *.zip -k
task:
  name: "Compile Rom"
  skip: $CIRRUS_BRANCH == 'main'
  timeout_in: 4h
  container:
      image: snaxpsycho/snaxpsycho:test
      cpu: 8
      memory: 32G
      stateful: true
      greedy: true
      volumes:
          - /home/cirrus:/home/cirrus
          - /home/cirrus/ccache:/home/cirrus/ccache
          - /home/cirrus/.config:/home/cirrus/.config
          
  started_notify_script:
    - set -e
    - curl -s "https://api.telegram.org/bot${bot_api}/sendmessage" -d "text=◦•●◉✿ 𝔹𝕦𝕚𝕝𝕕 𝕊𝕥𝕒𝕣𝕥𝕖𝕕 ✿◉●•◦
      
      
      $device-$rom_name has been started successfully.
      
      
      <a href='https://cirrus-ci.com/build/$CIRRUS_BUILD_ID'>Click here to see status</a>
      
      
      ◦•●◉✿ by Sã Śâjjãd ✿◉●•◦" -d "chat_id=$tg_id" -d "parse_mode=HTML"
  
  setup_scripts_script:
    - set -e
    - bash script

  sync_script:
    - set -e
    - mkdir -p ~/$rom_name
    - cd ~/$rom_name
    - rm -rf .repo/local_manifests
    - command=$(head $CIRRUS_WORKING_DIR/build_rom.sh -n $(expr $(grep 'build/envsetup.sh' $CIRRUS_WORKING_DIR/build_rom.sh -n | cut -f1 -d:) - 1))
    - only_sync=$(grep 'repo sync' $CIRRUS_WORKING_DIR/build_rom.sh)
    - bash -c "$command" || true

  build_script:
    - set -e
    - grep _jasmine_sprout $CIRRUS_WORKING_DIR/build_rom.sh > /dev/null && device=jasmine_sprout
    - grep _laurel_sprout $CIRRUS_WORKING_DIR/build_rom.sh > /dev/null && device=laurel_sprout
    - grep _GM8_sprout $CIRRUS_WORKING_DIR/build_rom.sh > /dev/null && device=GM8_sprout
    - grep _maple_dsds $CIRRUS_WORKING_DIR/build_rom.sh > /dev/null && device=maple_dsds
    - cd ~/$rom_name
    - export CCACHE_DIR=~/ccache/$rom_name/$device
    - export CCACHE_EXEC=$(which ccache)
    - export USE_CCACHE=1
    - ccache -M 10G
    - ccache -z
    - ls device/*/*/vendorsetup.sh | grep -v generic && echo "Please remove vendorsetup.sh file from device tree, use local manifest for cloning and removing repositories." && exit 1 || true
    - command=$(tail $CIRRUS_WORKING_DIR/build_rom.sh -n +$(expr $(grep 'build/envsetup.sh' $CIRRUS_WORKING_DIR/build_rom.sh -n | cut -f1 -d:) - 1)| head -n -1 | grep -v 'rclone copy')
    - bash -c "$command"

  ccache_stats_script:
    - set -e
    - grep _jasmine_sprout $CIRRUS_WORKING_DIR/build_rom.sh > /dev/null && device=jasmine_sprout
    - grep _laurel_sprout $CIRRUS_WORKING_DIR/build_rom.sh > /dev/null && device=laurel_sprout
    - grep _GM8_sprout $CIRRUS_WORKING_DIR/build_rom.sh > /dev/null && device=GM8_sprout
    - grep _maple_dsds $CIRRUS_WORKING_DIR/build_rom.sh > /dev/null && device=maple_dsds
    - export CCACHE_DIR=~/ccache/$rom_name/$device
    - ccache -s

  upload_script:
    - bash upload_rom
  remove_script:
    - set -e
    - grep _jasmine_sprout $CIRRUS_WORKING_DIR/build_rom.sh > /dev/null && device=jasmine_sprout
    - grep _laurel_sprout $CIRRUS_WORKING_DIR/build_rom.sh > /dev/null && device=laurel_sprout
    - grep _GM8_sprout $CIRRUS_WORKING_DIR/build_rom.sh > /dev/null && device=GM8_sprout
    - grep _maple_dsds $CIRRUS_WORKING_DIR/build_rom.sh > /dev/null && device=maple_dsds
    - cd ~/$rom_name
    - rm -rf out/target/product/$device

  